---

- name: Install the transmission package
  tags: apt
  apt:
    update_cache: true
    name: '{{ transmission_packages }}'
    state: present

# Create random ports =========================================================
- name: Set ports configuration
  set_fact:
    peer_port: '{{ 40000 + (10000 | random) }}'
    peer_port_random_low: '{{ 40000 + (10000 | random) }}'
    peer_port_random_high: '{{ 50000 + (10000 | random) }}'

# Web site configuration ======================================================

- name: Create the web site
  tags: config, nginx
  notify:
    - Check nginx config
    - Restart nginx
  vars:
    csp: '{{ transmission.csp | default(csp_default) }}'
    fp: '{{ transmission.fp | default(fp_default) }}'
  template:
    src: nginx.conf
    dest: '/etc/nginx/sites-available/transmission.{{ network.domain }}.conf'
    owner: root
    group: root
    mode: '0644'

- name: Copy nginx configuration
  tags: nginx
  notify:
    - Check nginx config
    - Restart nginx
  file:
    src: '/etc/nginx/sites-available/transmission.{{ network.domain }}.conf'
    dest: '/etc/nginx/sites-enabled/transmission.{{ network.domain }}.conf'
    state: link

# nginx Fancyindex ============================================================
- name: Install the nginx fancyindex package
  tags: apt
  apt:
    name: libnginx-mod-http-fancyindex
    state: present

- name: Copy fancyindex theme
  tags: fancyindex
  copy:
    src: 'download-themes'
    dest: '/usr/share/transmission/web/'
    owner: root
    group: root

# System configuration ========================================================
- name: Tune the network system limits for transmission
  tags: sysctl
  sysctl:
    name: '{{ sysctl.name }}'
    value: '{{ sysctl.value }}'
    state: present
  with_items:
    - name: net.core.rmem_max
      value: 4194304
    - name: net.core.wmem_max
      value: 4194304
  loop_control:
    loop_var: sysctl

# Daemon configuration ========================================================

- name: Check if transmission is already running  # noqa 303
  register: transmission_status
  shell: >-
    systemctl --quiet is-active transmission-daemon
    && echo Running || echo None
  args:
    warn: false

- name: Stop transmission daemon
  when: transmission_status == "Running"
  service:
    name: transmission-daemon
    state: stopped

- name: Copy the daemon configuration
  tags: config
  notify: Restart transmission daemon
  template:
    src: 'settings.json'
    dest: '/etc/transmission-daemon/settings.json'
    owner: debian-transmission
    group: debian-transmission
    mode: '0600'

- name: Create the directories for downloads complete
  notify: Restart transmission daemon
  file:
    path: '{{ transmission.download_dir }}'
    state: directory
    owner: debian-transmission
    group: debian-transmission
    mode: '0755'

- name: Create the directories for downloads in progress
  notify: Restart transmission daemon
  when: transmission.incomplete_dir
  file:
    dest: '{{ transmission.incomplete_dir }}'
    state: directory
    owner: debian-transmission
    group: debian-transmission
    mode: '0700'

# Firewall configuration ======================================================

- name: Configure firewall rules for transmission (output)
  tags: ufw
  ufw:
    comment: Allow transmission output connections
    from_ip: any
    to_ip: any
    direction: out
    protocol: '{{ protocol }}'
    rule: allow
    from_port: '{{ peer_port }}'
    to_port: '1024:65535'
  with_items:
    - tcp
    - udp
  loop_control:
    loop_var: protocol

- name: Allow transmissions files to be received
  tags: ufw
  ufw:
    comment: Allow transmission connections
    from_ip: any
    to_ip: any
    direction: out
    protocol: '{{ protocol }}'
    rule: allow
    from_port: '1024:65535'
    to_port: '{{ peer_port_random_low }}:{{ peer_port_random_high }}'
  with_items:
    - tcp
    - udp
  loop_control:
    loop_var: protocol

- name: Allow transmissions files to be received
  tags: ufw
  ufw:
    comment: Allow transmission connections
    from_ip: any
    to_ip: any
    direction: in
    protocol: '{{ protocol }}'
    rule: allow
    from_port: '1024:65535'
    to_port: '{{ peer_port_random_low }}:{{ peer_port_random_high }}'
  with_items:
    - tcp
    - udp
  loop_control:
    loop_var: protocol

# AppArmor configuration ======================================================

- name: Install nginx AppArmor profile
  tags: security, apparmor
  register: aa_config
  notify:
    - Check nginx config
    - Restart nginx
  template:
    src: 'apparmor.d/{{ file }}'
    dest: '/etc/apparmor.d/{{ file }}'
  with_items:
    - local/nginx-transmission-web
    - usr.bin.transmission-daemon
  loop_control:
    loop_var: file

- name: Check if AppArmor nginx configuration already contains the line
  register: line_found
  shell: >-
    grep -c 'include <local/nginx-transmission-web>'
    /etc/apparmor.d/usr.sbin.nginx
  changed_when: false
  failed_when: false

- name: Add transmission AppAromor specific configuration
  when: line_found.stdout == '0'
  tags: security, apparmor
  lineinfile:
    path: /etc/apparmor.d/usr.sbin.nginx
    line: '  #include <local/nginx-transmission-web>'
    insertbefore: '# End of local includes for homebox'

# Backup handling
- name: Add some patterns to exclude in the backups
  tags: backup
  lineinfile:
    path: /etc/homebox/backup-exclude
    line: '{{ line }}'
  with_items:
    - "\n# Transmission: Exclude downloaded files from backup"
    - '{{ transmission.download_dir }}'
    - '{{ transmission.incomplete_dir }}'
  loop_control:
    loop_var: line

- name: Activate AppArmor profiles
  when: aa_config.changed
  tags: security, apparmor
  command: 'aa-enforce usr.sbin.nginx'
  notify: Restart AppArmor service
