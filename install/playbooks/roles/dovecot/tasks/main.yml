---

################################################################################
# Install dovecot packages
# Set the default repository to download dovecot packages
- name: Install dovecot packages
  tags: dovecot
  apt:
    name: '{{ dovecot.packages }}'
    state: latest

- name: Install dovecot packages for full text search
  when: mail.fts.active
  tags: dovecot
  apt:
    name: dovecot-solr
    state: latest

- name: Allow mail damon to access the users directory
  file:
    path: /home/users
    mode: 0755

- name: Make sure loopback interface is "trusted"
  notify: Restart dovecot
  replace:
    path: /etc/dovecot/dovecot.conf
    regexp: '^#?\s?login_trusted_networks.*'
    replace: 'login_trusted_networks = 127.0.0.1 ::1'

################################################################################
# At this point, the certificates should have been created already #############
# in order to have SSL and TLS encryption activated.                           #
- name: Allow slapd and nslcd daemons to access the certificate directories
  tags: dovecot,ssl
  notify: Restart dovecot
  acl:
    path: '{{ path }}'
    entity: dovecot
    etype: user
    permissions: rx
    state: present
    recursive: yes
  with_items:
    - /etc/letsencrypt
    - /etc/letsencrypt/archive
    - /etc/letsencrypt/live
  loop_control:
    loop_var: path

- name: Generate a strong Diffie Hellman file
  notify: Restart dovecot
  tags: ssl
  openssl_dhparam:
    path: /etc/dovecot/private/dh.pem
    size: '{{ security.dhparam_size }}'
    mode: 0640
    owner: root
    group: dovecot

- name: Copy the certificate renewal hook
  tags: cert
  copy:
    src: renew-cert.sh
    dest: /etc/letsencrypt/renewal-hooks/deploy/30-dovecot.sh
    mode: 0755

#                                                                              #
# End of TLS / SSL Configuration ###############################################

- name: Ensure the imap server FQDN resolves to localhost
  tags: dovecot
  lineinfile:
    path: /etc/hosts
    line: '127.0.0.1    imap.{{ network.domain }}'

# Activate SSL on the imap server
- name: Activate SSL configuration
  tags: ssl, config
  notify: Restart dovecot
  template:
    src: 'conf.d/{{ file }}'
    dest: '/etc/dovecot/conf.d/{{ file }}'
  with_items:
    - 10-ssl.conf
  loop_control:
    loop_var: file

- name: Create dovecot global configuration files
  tags: config
  notify: Restart dovecot
  template:
    src: '{{ file }}'
    dest: '/etc/dovecot/{{ file }}'
    mode: 0600
  with_items:
    - dovecot-ldap.conf.ext
  loop_control:
    loop_var: file

- name: Create the initial list of mail_plugins
  tags: config
  set_fact:
    mail_plugins: $mail_plugins quota

- name: Add fts to the list of mail plugins
  tags: config
  when: mail.fts.active
  set_fact:
    mail_plugins: "{{ mail_plugins }} fts fts_solr"

- name: Add virtual mailboxes to the list of mail plugins
  tags: config
  when: mail.virtual_folders.active
  set_fact:
    mail_plugins: "{{ mail_plugins }} virtual"

- name: Create dovecot conf.d configuration files
  tags: config
  notify: Restart dovecot
  template:
    src: 'conf.d/{{ file }}'
    dest: '/etc/dovecot/conf.d/{{ file }}'
  with_items:
    - 10-auth.conf
    - 10-master.conf
    - 10-mail.conf
    - 10-logging.conf
    - 15-lda.conf
    - 15-mailboxes.conf
    - 20-managesieve.conf
    - 20-imap.conf
    - 20-lmtp.conf
    - 90-sieve.conf
    - 90-plugin.conf
    - 90-quota.conf
  loop_control:
    loop_var: file

- name: Create the global sieve directory
  tags: sieve
  file:
    path: /etc/dovecot/sieve
    state: directory

- name: Copy global sieve configuration
  tags: sieve
  notify: Restart dovecot
  template:
    src: 'sieve/{{ file }}'
    dest: '/etc/dovecot/sieve/{{ file }}'
    mode: '0644'
  with_items:
    - '{{ sieve.global_scripts }}'
  loop_control:
    loop_var: file

- name: Copy global sieve custom pipe scripts
  when: mail.antispam.active
  tags: sieve, scripts
  notify: Restart dovecot
  template:
    src: learn-hamorspam.sh
    dest: /etc/dovecot/sieve/learn-hamorspam.sh
    mode: '0755'

- name: Configure the firewall for default access
  tags: security
  ufw:
    rule: allow
    proto: tcp
    src: any
    port: '{{ rule.port }}'
    comment: '{{ rule.comment }}'
  with_items:
    - comment: Allow IMAPS access
      port: 993
    - comment: Allow Managesieve access
      port: 4190
  loop_control:
    loop_var: rule

- name: Configure the firewall for POP3 access
  when: mail.pop3
  tags: security
  ufw:
    rule: allow
    proto: tcp
    src: any
    port: 995
    comment: Allow POP3S access

- name: Create the post-login script directory
  file:
    path: /etc/dovecot/login-scripts
    state: directory

# Dovecot impersonate feature =================================================
- name: Import imersonate tasks
  when: mail.impersonate.active
  import_tasks: impersonate.yml

# Dovecot access check script =================================================
- name: Import dovecot access check tasks
  when: access_check.active
  import_tasks: access-check.yml

# Import emails from other accounts ===========================================

# This user account will impersonate each user, to store their emails after migration
# from other accounts
- name: Initialise the import user password parameters
  when: mail.import.active
  tags: impersonate
  set_fact:
    import_password_params: "{{ backup_directory }}/ldap/import.pwd {{ policies.system.password }}"

- name: Create the import user account password
  when: mail.import.active
  tags: impersonate
  no_log: true
  set_fact:
    import_password: '{{ lookup("password", import_password_params) }}'

- name: Create the import email master user account
  when: mail.import.active
  tags: impersonate
  htpasswd:
    path: /etc/dovecot/master-users
    name: 'import'
    password: '{{ import_password }}'
    owner: dovecot
    group: dovecot
    mode: '0400'
    crypt_scheme: ldap_sha1

- name: Copy the default postlogin script
  tags: scripts
  copy:
    src: dovecot-postlogin
    dest: /usr/local/sbin/dovecot-postlogin
    mode: '0755'
    owner: root
    group: root

# Backup handling
- name: Add some patterns to exclude in the backups
  tags: backup
  lineinfile:
    path: /etc/homebox/backup-exclude
    line: '{{ line }}'
  with_items:
    - '# Dovecot: Exclude indexes from backup'
    - '/home/users/*/mails/indexes/*'
    - '/home/users/*/.dovecot.lda-dupes*'
    - '/home/users/*/mails/sieve/logs/*'
  loop_control:
    loop_var: line

# AppArmor configuration ======================================================
- name: Install some dovecot AppArmor profile
  tags: security, apparmor
  register: aa_templates
  template:
    src: 'apparmor.d/{{ aa_config }}'
    dest: '/etc/apparmor.d/{{ aa_config }}'
  with_items:
    - tunables/dovecot
    - local/usr.sbin.dovecot
    - local/usr.lib.dovecot.imap
    - local/usr.lib.dovecot.pop3
    - local/usr.lib.dovecot.lmtp
    - local/usr.lib.dovecot.config
    - local/usr.lib.dovecot.auth
    - local/usr.lib.dovecot.managesieve
    - local/usr.lib.dovecot.quota-status
    - usr.lib.dovecot.quota-status
    - usr.lib.dovecot.script-login
    - usr.lib.dovecot.script
    - usr.lib.dovecot.stats
    - usr.bin.logger
  loop_control:
    loop_var: aa_config

- name: Activate AppArmor profiles
  when: aa_templates.changed
  tags: dovecot, security, apparmor
  notify: Restart AppArmor service
  command: 'aa-enforce {{ aa_config }}'
  with_items:
    - usr.sbin.dovecot
    - usr.lib.dovecot.imap
    - usr.lib.dovecot.pop3
    - usr.lib.dovecot.lmtp
    - usr.lib.dovecot.config
    - usr.lib.dovecot.auth
    - usr.lib.dovecot.managesieve
    - usr.lib.dovecot.quota-status
    - usr.lib.dovecot.anvil
    - usr.lib.dovecot.deliver
    - usr.lib.dovecot.dict
    - usr.lib.dovecot.dovecot-auth
    - usr.lib.dovecot.dovecot-lda
    - usr.lib.dovecot.imap-login
    - usr.lib.dovecot.log
    - usr.lib.dovecot.managesieve-login
    - usr.lib.dovecot.pop3-login
    - usr.lib.dovecot.ssl-params
    - usr.lib.dovecot.script-login
    - usr.lib.dovecot.script
    - usr.lib.dovecot.stats
  loop_control:
    loop_var: aa_config

################################################################################
- name: Activate core dumps or not
  tags: debug
  notify: Restart dovecot
  replace:
    path: /etc/default/dovecot
    regexp: '^#?ALLOW_COREDUMPS=[01]'
    replace: 'ALLOW_COREDUMPS={{ system.debug | ternary(1,0) }}'

################################################################################
- name: Install packages needed for dovecot fts
  when: mail.fts.active
  apt:
    update_cache: yes
    cache_valid_time: 86400
    name: '{{ dovecot.fts_packages }}'
    state: latest

- name: Copy decode2text script
  when: mail.fts.active
  tags: scripts
  copy:
    src: fts/decode2text
    dest: /usr/local/bin/decode2text
    mode: 0755

- name: Copy decode2text script
  when: mail.fts.active
  tags: logs
  file:
    path: /var/log/decode2text.log
    mode: 0644
    owner: dovecot
    group: dovecot
    state: touch


- name: Copy fts mime configuration files
  when: mail.fts.active
  tags: config
  template:
    src: '{{ file.src }}'
    dest: '{{ file.dest }}'
  with_items:
    - src: fts/mime-supported.conf
      dest: /etc/dovecot/fts-mime-types.conf
  loop_control:
    loop_var: file

- name: Copy solr configuration files
  when: mail.fts.active
  tags: config
  notify: Restart tomcat
  template:
    src: '{{ file.src }}'
    dest: '{{ file.dest }}'
  with_items:
    - src: fts/solr-schema.xml
      dest: /etc/solr/conf/schema.xml
  loop_control:
    loop_var: file

# Virtual mailboxes creation ==================================================

- name: Include virtual mailboxes tasks
  tags: virtual
  when: mail.virtual_folders.active
  include_tasks: roles/dovecot/tasks/virtual.yml

# AppArmor configuration ======================================================
- name: Install dovecot indexer AppArmor profile
  when: mail.fts.active
  tags: dovecot, security, apparmor
  register: aa_templates
  template:
    src: 'apparmor.d/{{ aa_config }}'
    dest: '/etc/apparmor.d/{{ aa_config }}'
  with_items:
    - usr.lib.dovecot.indexer
    - usr.lib.dovecot.indexer-worker
    - usr.local.bin.decode2text
  loop_control:
    loop_var: aa_config

- name: Activate AppArmor profiles
  when: mail.fts.active and aa_templates.changed
  tags: dovecot, security, apparmor
  notify: Restart AppArmor service
  command: 'aa-enforce {{ aa_config }}'
  with_items:
    - usr.lib.dovecot.indexer
    - usr.lib.dovecot.indexer-worker
    - usr.local.bin.decode2text
  loop_control:
    loop_var: aa_config

# fail2ban configuration ======================================================
- name: Activate fail2ban for dovecot
  tags: security, fail2ban
  notify: Restart fail2ban
  ini_file:
    path: /etc/fail2ban/jail.conf
    option: enabled
    section: '{{ section }}'
    value: true
    create: no
  with_items:
    - dovecot
    - sieve
  loop_control:
    loop_var: section

- name: Set fail2ban time
  tags: security, fail2ban
  notify: Restart fail2ban
  ini_file:
    path: /etc/fail2ban/jail.conf
    option: bantime
    section: '{{ section }}'
    value: '{{ mail.fail2ban.time }}'
    create: no
  with_items:
    - dovecot
    - sieve
  loop_control:
    loop_var: section

# Create entries for the DNS server ===========================================
- name: Generate DNS records for bind
  tags: bind
  when: bind.install
  template:
    src: 40-dovecot.bind
    dest: /etc/homebox/dns-entries.d/40-dovecot.bind
