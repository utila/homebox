
# Create a web site to manage well known services
# See: https://en.wikipedia.org/wiki/List_of_%2F.well-known%2F_services_offered_by_webservers

server {

    # Listen on both IPv4 and IPv6
    listen 443 ssl http2;
    listen [::]:443 ssl;

    # Add security headers
    {% for sh in nginx_sec_headers -%}
    add_header {{ sh.id }} {{ sh.value | quote }};
    {% endfor %}

    # Add Content security policy
    add_header Content-Security-Policy "{%- for c in csp.list %}{{ c.id }} {{ c.value | default(csp.default) }};{% endfor %}";

    # Features policy
    add_header Feature-Policy "{%- for f in fp.list %}{{ f.id }} {{ f.value | default(fp.default) }};{% endfor %}";

    # Web site FQDN
    server_name {{ network.domain }};

    # The default web site
    root /var/www/default/;

    # Remove useless tokens for better security feelings ;-)
    server_tokens off;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/{{ network.domain }}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{ network.domain }}/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/{{ network.domain }}/fullchain.pem;

{% if sogo.install %}
    # Automatic services discovery for CardDAV / CalDAV
    location /.well-known/carddav {
        rewrite ^ https://sogo.{{ network.domain }}/SOGo/dav/ permanent;
    }
    location /.well-known/caldav {
        rewrite ^ https://sogo.{{ network.domain }}/SOGo/dav/ permanent;
    }
{% endif %}

{% if website.install %}
    # Default web site: redirect to www.{{ network.domain }}
    location / {
        rewrite ^ https://www.{{ network.domain }} permanent;
    }
{% else %}
    location / {
        deny all;
    }
{% endif %}

    # log files per virtual host
    access_log /var/log/nginx/wellknown-access.log;
    error_log /var/log/nginx/wellknown-error.log;
}
