---

- name: Get the passwords generated in the accounts tasks
  tags: password
  set_fact:
    roPasswdParams: "{{ backup_directory }}/ldap/readonly.pwd"

- name: Install roundcube webmail
  tags: apt
  apt:
    name: "{{ roundcube_packages }}"
    state: present

- name: Compute max upload size from max attachment size
  tags: config
  set_fact:
    upload_max_size: '{{ mail.max_attachment_size }}'
    post_max_size: '{{ 1 + mail.max_attachment_size | int }}'

- name: Copy roundcube configuration
  tags: nginx
  notify: Restart nginx
  vars:
    csp: '{{ roundcube.csp | default(csp_default) }}'
    fp: '{{ roundcube.fp | default(fp_default) }}'
  template:
    src: nginx.conf
    dest: '/etc/nginx/sites-available/webmail.{{ network.domain }}.conf'
    owner: root
    group: root
    mode: 0644

- name: Activate roundcube web site
  tags: nginx
  notify: Restart nginx
  file:
    src: '/etc/nginx/sites-available/webmail.{{ network.domain }}.conf'
    dest: '/etc/nginx/sites-enabled/webmail.{{ network.domain }}.conf'
    state: link

- name: Create a session key for roundcube
  tags: password
  notify: Restart nginx
  shell: makepasswd --chars=24
  register: makepasswd

- name: Create the directory for dovecot_impersonate plugin
  when: mail.impersonate.active
  tags: plugins, impersonate
  file:
    path: /etc/roundcube/plugins/dovecot_impersonate
    owner: root
    group: root
    mode: 0755
    state: directory

- name: Create the dovecot impersonate configuration
  tags: plugins, impersonate
  when: mail.impersonate.active
  template:
    src: plugins/dovecot_impersonate.php
    dest: /etc/roundcube/plugins/dovecot_impersonate/config.inc.php
    owner: root
    group: root
    mode: 0644

- name: Make sure the plugin reads the correct configuration file
  tags: plugins, impersonate
  file:
    src: /etc/roundcube/plugins/dovecot_impersonate/config.inc.php
    dest: /usr/share/roundcube/plugins/dovecot_impersonate/config.inc.php
    state: link
    force: yes

- name: Create the Dovecot ident plugin directory
  tags: plugins
  file:
    path: /usr/share/roundcube/plugins/dovecot_ident
    state: directory

- name: Configure RoundCube to pass the IP address to dovecot
  tags: plugins
  copy:
    src: dovecot_ident.php
    dest: /usr/share/roundcube/plugins/dovecot_ident/dovecot_ident.php

- name: Create the symbolic link
  tags: plugins
  file:
    src: /usr/share/roundcube/plugins/dovecot_ident
    dest: /var/lib/roundcube/plugins/dovecot_ident
    state: link

- name: Copy roundcube configuration
  tags: plugins
  notify: Restart nginx
  vars:
    plugins: ' [''{{ roundcube.plugins | join(", "|quote) }}'' ]'
  template:
    src: config.inc.php
    dest: /etc/roundcube/config.inc.php
    owner: root
    group: root
    mode: 0644

- name: Make sure there is a directory for each of these plugins
  tags: plugins
  file:
    path: '/etc/roundcube/plugins/{{ file }}'
    owner: root
    group: root
    mode: 0755
    state: directory
  with_items:
    - password
    - new_user_identity
    - managesieve
    - thunderbird_labels
  loop_control:
    loop_var: file

- name: Copy roundcube plugins configuration
  tags: config
  notify: Restart nginx
  template:
    src: 'plugins/{{ file }}.php'
    dest: '/etc/roundcube/plugins/{{ file }}/config.inc.php'
    owner: root
    group: www-data
    mode: 0640
  with_items:
    - password
    - new_user_identity
    - managesieve
    - thunderbird_labels
  loop_control:
    loop_var: file

- name: Replace the upload maximum size in
  tags: config
  notify: Restart php-fpm
  replace:
    path: /etc/php/7.3/fpm/php.ini
    regexp: '{{ line.regexp }}'
    replace: '{{ line.replace }}'
  with_items:
    - regexp: '^upload_max_filesize = .*'
      replace: 'upload_max_filesize = {{ upload_max_size }}M'
    - regexp: '^post_max_size = .*'
      replace: 'post_max_size = {{ post_max_size }}M'
  loop_control:
    loop_var: line

# There is bugs in the name of the symbolic links on Debian
# https://bugs.debian.org/cgi-bin/pkgreport.cgi?pkg=roundcube-plugins-extra;dist=stable
- name: Make sure the plugins are correctly named
  command: >-
    mv '/var/lib/roundcube/plugins/{{ folder.old }}'
    '/var/lib/roundcube/plugins/{{ folder.new }}'
  args:
    creates: '/var/lib/roundcube/plugins/{{ folder.new }}'
  with_items:
    - old: keyboard-shortcuts
      new: keyboard_shortcuts
    - old: thunderbird-labels
      new: thunderbird_labels
    - old: dovecot-impersonate
      new: dovecot_impersonate
  loop_control:
    loop_var: folder


# AppArmor configuration ======================================================

- name: Install nginx AppArmor profile
  notify:
    - Activate AppArmor profile
    - Restart AppArmor service
    - Restart nginx
  tags: roundcube, security, apparmor
  template:
    src: apparmor.d/local/roundcube
    dest: /etc/apparmor.d/local/nginx-roundcube

- name: Check if AppArmor nginx configuration already contains the line
  register: line_found
  shell: >-
    grep -c 'include <local/nginx-roundcube>'
    /etc/apparmor.d/usr.sbin.nginx
  changed_when: false
  failed_when: false

- name: Add roundcube AppArmor specific configuration
  when: line_found.stdout == '0'
  notify:
    - Activate AppArmor profile
    - Restart AppArmor service
    - Restart nginx
  tags: roundcube, security, apparmor
  lineinfile:
    path: /etc/apparmor.d/usr.sbin.nginx
    line: '  #include <local/nginx-roundcube>'
    insertbefore: '# End of local includes for homebox'
