---

- name: Extract backup location details
  tags: backup, facts
  set_fact:
    protocol: '{{ location.url | urlsplit("scheme") }}'
    location_host: '{{ location.url | urlsplit("hostname") }}'
    location_user: '{{ location.url | urlsplit("username") | default("backup") }}'
    location_path: '{{ location.url | urlsplit("path") }}'
    location_details: '{{ location.url | urlsplit }}'

- name: Create the backup config into /etc/homebox
  tags: config
  ini_file:
    path: '/etc/homebox/backup.ini'
    section: '{{ location.name }}'
    option: '{{ option.name }}'
    value: '{{ option.value }}'
    mode: '0600'
  with_items:
    - name: url
      value: '{{ location.url }}'
    - name: active
      value: '{{ location.active }}'
    - name: keep_daily
      value: '{{ location.keep_daily | default(1) }}'
    - name: keep_weekly
      value: '{{ location.keep_weekly | default(1) }}'
    - name: keep_monthly
      value: '{{ location.keep_monthly | default(1) }}'
    - name: compression
      value: '{{ location.compression | default("lz4") }}'
  loop_control:
    loop_var: option

- name: Create a directory to store all the ssh configuration segments
  tags: backup
  file:
    path: /root/.ssh/config.d/
    state: directory

- name: Allow external SSH connections
  tags: ufw
  ufw:
    direction: out
    proto: tcp
    port: 22
    src: any
    rule: allow
    comment: Allow the box to connect outside via SSH for backup

- name: Include the generated configutations in the main file
  tags: ssh
  lineinfile:
    path: /root/.ssh/config
    line: '{{ line }}'
    create: true
  with_items:
    - "# Generated by homebox:"
    - "Include config.d/*"
  loop_control:
    loop_var: line

- name: Configure the backup location
  tags: ssh
  template:
    src: 'ssh-config'
    dest: '/root/.ssh/config.d/backup-{{ location.name }}'

- name: Get backup server signature
  tags: ssh
  shell: 'ssh-keyscan -H {{ location_host }}'
  register: keyscan

- name: Add the backup server to known_hosts, once for all
  tags: ssh
  lineinfile:
    path: /root/.ssh/known_hosts
    line: '{{ line }}'
    create: yes
  with_items:
    - '{{ keyscan.stdout_lines }}'
  loop_control:
    loop_var: line

- name: Install the required file systems
  apt:
    name: 'sshfs'
    state: present

###############################################################################

- name: Set mount options for sshfs
  set_fact:
    mount_options: []

- name: Add mount point definition for this location
  register: mount_systemd
  notify: Reload Systemd
  tags: systemd
  template:
    src: 'mount-sshfs.systemd'
    dest: '/etc/systemd/system/mnt-backup-{{ location.name }}.mount'

- name: Enable the mount service
  tags: systemd
  systemd:
    name: 'mnt-backup-{{ location.name }}.mount'
    enabled: true
    state: started

- name: Add automount definition for this device
  notify: Reload Systemd
  tags: systemd
  template:
    src: mount-auto.systemd
    dest: '/etc/systemd/system/mnt-backup-{{ location.name }}.automount'

- name: Enable the automount service
  tags: systemd
  systemd:
    name: 'mnt-backup-{{ location.name }}.automount'
    enabled: true
    state: restarted
