---

- name: Install clamav antivirus suite
  register: clamav_packages
  vars:
    pkgs:
      - clamav
      - clamav-base
      - clamav-daemon
      - clamav-freshclam
      - clamdscan
      - clamsmtp
      - ipcalc
  apt:
    name: '{{ pkgs }}'
    state: present

- name: Set up the configuration file
  tags: config
  notify: Restart clamav services
  template:
    src: '{{ file.src }}'
    dest: '{{ file.dest }}'
  with_items:
    - src: clamsmtpd.conf
      dest: /etc/clamsmtpd.conf
    - src: freshclam.conf
      dest: /etc/clamav/freshclam.conf
  loop_control:
    loop_var: file

###############################################################################
# See the Debian bug report:
# https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=827909
#
- name: Start clamav freshclam service
  register: clamav_freshclam
  service:
    name: clamav-freshclam
    state: started
    enabled: yes

- name: Wait for the freshclam service to have downloaded daily update on the first installation
  when: clamav_packages.changed
  wait_for:
    path: /var/lib/clamav/daily.cvd
    sleep: 1
    timeout: 300

- name: Start clamav service
  service:
    name: clamav-daemon
    state: started
    enabled: yes

# Ansible lint generate a warning here.
# FIXME: There should be a simpler way to check the status of a service
- name: Wait for the clamav service to be started # noqa 303
  register: clamav_daemon
  command: systemctl status clamav-daemon
  retries: 10
  until: clamav_daemon.rc == 0
  delay: 1

#
###############################################################################

- name: Get the remote locale
  tags: locale
  set_fact:
    lang: '{{ ansible_env.LANG | regex_replace("\..*", "") }}'

- name: Create the clamsmtp templates directory
  file:
    path: /etc/clamsmtp
    state: directory
    owner: clamsmtp
    group: clamsmtp
    mode: '0700'

- name: Create the logs folder for clamsmtp
  file:
    path: /var/log/clamsmtp
    owner: clamsmtp
    group: clamsmtp
    mode: '0700'
    state: directory

# AppArmor configuration ======================================================
- name: Install some dovecot AppArmor profile
  tags: security, apparmor
  register: aa_templates
  template:
    src: 'apparmor.d/{{ aa_config }}'
    dest: '/etc/apparmor.d/{{ aa_config }}'
  with_items:
    - usr.sbin.clamsmtpd
  loop_control:
    loop_var: aa_config

- name: Activate AppArmor profiles
  when: aa_templates.changed
  tags: security, apparmor
  notify: Restart AppArmor service
  command: 'aa-enforce {{ aa_config }}'
  with_items:
    - usr.bin.freshclam
    - usr.sbin.clamd
  loop_control:
    loop_var: aa_config
